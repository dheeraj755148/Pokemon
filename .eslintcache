[{"C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\index.js":"1","C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\reportWebVitals.js":"2","C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\components\\App.js":"3","C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\components\\pokemon.js":"4","C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\components\\pokemonMore.js":"5"},{"size":511,"mtime":1607519518104,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":506,"mtime":1609690691103,"results":"9","hashOfConfig":"7"},{"size":4658,"mtime":1609751587810,"results":"10","hashOfConfig":"7"},{"size":2968,"mtime":1609746511841,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"13pu022",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\index.js",[],["26","27"],"C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\reportWebVitals.js",[],"C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\components\\App.js",[],"C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\components\\pokemon.js",["28","29"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../style/pokemon.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport pokeball from \"../pokeball.png\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nfunction Pokemon() {\r\n  const [available, notavailable] = useState(false);\r\n  const [pokemonState, pokemonStateNo] = useState([]);\r\n  const [search, searchSpace] = useState(null);\r\n  const [hasMoreItems, noMoreItems] = useState(true);\r\n  const [countm, countDef] = useState();\r\n  const [iterate, iterationUpdate] = useState(50);\r\n  useEffect(() => {\r\n    apicalls();\r\n    countNess();\r\n  }, [iterate]);\r\n\r\n  const countNess = async () => {\r\n    const d = axios.get(`https://pokeapi.co/api/v2/pokemon/`);\r\n    const temp = (await d).data;\r\n    console.log(temp)\r\n    countDef(temp.count);\r\n  };\r\n\r\n  const apicalls = async () => {\r\n    var pokemonData = [];\r\n\r\n    for (var i = 1; i <= iterate; i++) {\r\n      const q = axios.get(`https://pokeapi.co/api/v2/pokemon/${i}`);\r\n      pokemonData.push((await q).data);\r\n    }\r\n\r\n    pokemonStateNo(pokemonData);\r\n    notavailable(true);\r\n  };\r\n\r\n  const loadMore = () => {\r\n    if (iterate === countm) {\r\n      noMoreItems(false);\r\n    } else {\r\n      setTimeout(() => {\r\n        iterationUpdate(iterate + 100);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  function searchTarget(event) {\r\n    let keyword = event.target.value;\r\n    searchSpace(keyword);\r\n  }\r\n  const itemsT = pokemonState\r\n    .filter((d) => {\r\n      if (search === null) {\r\n        return d;\r\n      } else if (d.name.toLowerCase().includes(search.toLowerCase())) {\r\n        return d;\r\n      }\r\n    })\r\n    .map((d) => {\r\n      return (\r\n        <div className=\"card\">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src={d.sprites.front_default}\r\n            alt=\"Card cap\"\r\n          ></img>\r\n          <div className=\"card-body\" key={d.id}>\r\n            <h5 className=\"card-title\" key={d.name}>\r\n              {d.name}\r\n            </h5>\r\n            <p className=\"card-text\">\r\n              {d.types.map((t) => t.type.name).join(\", \")}\r\n            </p>\r\n            <button className=\"button-animation\">\r\n              <Link\r\n                style={{ color: \"#fff\", textDecoration: \"none\" }}\r\n                to={`/${d.id}`}\r\n              >\r\n                <p>More Info</p>\r\n              </Link>{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  if (available) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h1 className=\"title\">PokeDex</h1>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"basic-addon1\">\r\n              <img\r\n                id=\"searchEngine\"\r\n                className=\"pokeball\"\r\n                src={pokeball}\r\n                alt=\"Pokeball\"\r\n              />\r\n            </span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search for pokemon\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => searchTarget(e)}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          {/*           {pokemonState.map((p) => (\r\n            <div className=\"card\">\r\n              <img\r\n                className=\"card-img-top\"\r\n                src={p.sprites.front_default}\r\n                alt=\"Card cap\"\r\n              ></img>\r\n              <div className=\"card-body\" key={p.id}>\r\n                <h5 className=\"card-title\" key={p.name}>\r\n                  {p.name}\r\n                </h5>\r\n                <p className=\"card-text\">\r\n                  {p.types.map((t) => t.type.name).join(\", \")}\r\n                </p>\r\n                <button className=\"button-animation\">\r\n                  <Link\r\n                    style={{ color: \"#fff\", textDecoration: \"none\" }}\r\n                    to={`/${p.id}`}\r\n                  >\r\n                    <p>More Info</p>\r\n                  </Link>{\" \"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))} */}\r\n          <InfiniteScroll\r\n            loadMore={loadMore}\r\n            hasMore={hasMoreItems}\r\n            useWindow={false}\r\n            className=\"row\"\r\n            loader={<div className=\"loader\"></div>}\r\n\r\n          >\r\n            {itemsT}\r\n          </InfiniteScroll>{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"loader\"></div>;\r\n  }\r\n}\r\n\r\nexport default Pokemon;\r\n","C:\\Users\\Dheeraj\\Desktop\\react\\pokemon\\src\\components\\pokemonMore.js",["30"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../style/pokemon.css\";\r\n\r\nfunction More({ match }) {\r\n\r\n\r\n  const [data, noData] = useState([]);    \r\n  const [sp, nospecies] = useState([]); /* for species */\r\n  const [available, notavailable] = useState(false);    /* loading */\r\n\r\n\r\n  useEffect(() => {\r\n    information();\r\n    evolution();\r\n  }, []);\r\n  const information = async () => {\r\n    const q = axios.get(`https://pokeapi.co/api/v2/pokemon/${match.params.id}`);\r\n    noData((await q).data);\r\n    notavailable(true);\r\n  };\r\n  const evolution = async () => {\r\n    const q = axios.get(`https://pokeapi.co/api/v2/pokemon/${match.params.id}`);\r\n    const spi = (await q).data.species.url;\r\n    const s = axios.get(spi);\r\n    const y = (await s).data.evolution_chain.url;\r\n    const ev = axios.get(y);\r\n    const j = (await ev).data.chain;\r\n    nospecies(j.evolves_to);\r\n  };\r\n\r\n  if (available) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h1 className=\"title\">{data.name}</h1>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <img\r\n                className=\"pokemon-image\"\r\n                src={data.sprites.front_default}\r\n                alt={data.name}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n              <p className=\"sub-headings\">\r\n                Height: {data.height} , Weight: {data.weight}, Base Experience:{\" \"}\r\n                {data.base_experience}\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n              <p className=\"sub-headings\">Moves</p>\r\n              <p className=\"list-items\">\r\n                {data.moves.map((l) => l.move.name).join(\", \")}\r\n              </p>\r\n              <p className=\"sub-headings\">Games found</p>\r\n              <p className=\"list-items\">\r\n                {data.game_indices.map((l) => l.version.name).join(\", \")}\r\n              </p>\r\n            </div>\r\n            {sp.map((i) => (\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <p className=\"sub-headings\">Evolution</p>\r\n                {i.evolves_to.map((k) => (\r\n                  <p className=\"list-items\">\r\n                    Final Evolution:{\" \"}\r\n                    {k.species.name === data.name ? (\r\n                      <p className=\"oops\">You are at final evolution</p>\r\n                    ) : (\r\n                      k.species.name\r\n                    )}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"loader\"></div>;\r\n  }\r\n}\r\n\r\nexport default More;\r\n",["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":18,"column":6,"nodeType":"39","endLine":18,"endColumn":15,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":54,"column":17,"nodeType":"43","messageId":"44","endLine":54,"endColumn":19},{"ruleId":"37","severity":1,"message":"45","line":17,"column":6,"nodeType":"39","endLine":17,"endColumn":8,"suggestions":"46"},{"ruleId":"33","replacedBy":"47"},{"ruleId":"35","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apicalls'. Either include it or remove the dependency array.","ArrayExpression",["51"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'evolution' and 'information'. Either include them or remove the dependency array.",["52"],["49"],["50"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},"Update the dependencies array to be: [apicalls, iterate]",{"range":"57","text":"58"},"Update the dependencies array to be: [evolution, information]",{"range":"59","text":"60"},[644,653],"[apicalls, iterate]",[437,439],"[evolution, information]"]